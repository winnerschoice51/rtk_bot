import os
import sys
import signal
from config import BOT_TOKEN, ADMINS
from telebot import TeleBot
from apscheduler.schedulers.background import BackgroundScheduler
from services.users import load_users
from services.weather import get_weather_full
from handlers import common, messages, firmware

bot = TeleBot(BOT_TOKEN)
common.register(bot)
messages.register(bot)
firmware.register(bot)

def send_weather_to_all():
    weather = get_weather_full()
    message = f"üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ –º–∏—Ä! –°–µ–≥–æ–¥–Ω—è –Ω–∞—Å –æ–∂–∏–¥–∞–µ—Ç —Ç–∞–∫–∞—è –ø–æ–≥–æ–¥–∞:\n\n{weather}"
    for user_id in load_users():
        try:
            bot.send_message(user_id, message, parse_mode="HTML")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {user_id}: {e}")

if __name__ == "__main__":
    pidfile = os.path.join(os.getenv('TEMP', '.'), 'telegram_bot.pid')
    if os.path.exists(pidfile):
        print("–£–∂–µ –∑–∞–ø—É—â–µ–Ω.")
    else:
        with open(pidfile, "w") as f:
            f.write(str(os.getpid()))

        scheduler = BackgroundScheduler(timezone="Europe/Moscow")
        scheduler.add_job(send_weather_to_all, 'cron', hour=7, minute=30)
        scheduler.start()

        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
        try:
            bot.infinity_polling()
        except KeyboardInterrupt:
            print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        finally:
            if os.path.exists(pidfile):
                os.remove(pidfile)
