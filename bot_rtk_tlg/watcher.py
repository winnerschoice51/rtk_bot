import subprocess
import time
import os
import logging
import sys

# –§–∞–π–ª-—Ñ–ª–∞–≥, –Ω–∞–ª–∏—á–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
RESTART_FLAG_FILE = 'restart.flag'

# –ò–º—è —Å–∫—Ä–∏–ø—Ç–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è
BOT_SCRIPT = 'main_telebot.py'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å —Å —É—Ä–æ–≤–Ω–µ–º INFO –∏ —Ñ–æ—Ä–º–∞—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s [%(levelname)s] %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S'
)


def git_pull():
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É `git pull` –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è.
    –õ–æ–≥–∏—Ä—É–µ—Ç –≤—ã–≤–æ–¥ –∏ –æ—à–∏–±–∫–∏.
    """
    logging.info("–û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –∏–∑ git...")
    result = subprocess.run(['git', 'pull'], capture_output=True, text=True)
    if result.stdout:
        logging.info(f"git pull output:\n{result.stdout.strip()}")
    if result.returncode != 0:
        logging.error(f"–û—à–∏–±–∫–∞ git pull:\n{result.stderr.strip()}")
    else:
        logging.info("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ.")



python_executable = sys.executable  # —ç—Ç–æ —Ç–µ–∫—É—â–∏–π –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–º –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è watcher

def run_bot():
        logging.info(f"–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞: {python_executable} {BOT_SCRIPT}")
        return subprocess.Popen([python_executable, BOT_SCRIPT])


def main():
    bot_process = run_bot()
    logging.info(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω, PID: {bot_process.pid}")

    while True:
        time.sleep(5)

        if os.path.exists(RESTART_FLAG_FILE):
            logging.info("–û–±–Ω–∞—Ä—É–∂–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ (—Ñ–∞–π–ª restart.flag –Ω–∞–π–¥–µ–Ω)")
            os.remove(RESTART_FLAG_FILE)

            logging.info("–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–∞...")
            bot_process.terminate()
            try:
                bot_process.wait(timeout=10)
                logging.info("main_telebot.py –∑–∞–≤–µ—Ä—à–∏–ª—Å—è, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º.")
                logging.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
            except subprocess.TimeoutExpired:
                logging.warning("–ë–æ—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –∑–∞ 10 —Å–µ–∫—É–Ω–¥, —É–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å.")
                bot_process.kill()
                bot_process.wait()

            # üßº –£–¥–∞–ª—è–µ–º PID-—Ñ–∞–π–ª, —á—Ç–æ–±—ã –Ω–æ–≤—ã–π –±–æ—Ç –º–æ–≥ —Å—Ç–∞—Ä—Ç–∞–Ω—É—Ç—å
            pidfile = os.path.join(os.getenv('TEMP', '.'), 'telegram_bot.pid')
            if os.path.exists(pidfile):
                logging.info("–£–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–π PID-—Ñ–∞–π–ª.")
                os.remove(pidfile)

            git_pull()
            bot_process = run_bot()
            logging.info(f"–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω, PID: {bot_process.pid}")


if __name__ == '__main__':
    main()
