import os
import signal
import sys
import time
import telebot
from telebot import types
from rarfile import RarFile
from apscheduler.schedulers.background import BackgroundScheduler
import requests
from datetime import datetime, timedelta
from get_weather_from_accu import get_weather_full
from get_weather_from_openweathermap_sync import get_weather_full

BOT_TOKEN = '8058971937:AAFjf3Gc9tCX5jpl3-0eM6qfCf7TEW10SsU'
USERS_FILE = "users.txt"
LOCATION = "polyarny,ru"
ADMINS = {7606152113}

bot = telebot.TeleBot(BOT_TOKEN)

menu_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
buttons = [
    ["–ì—Ä–∞—Ñ–∏–∫ –º–∞—Å—Ç–µ—Ä–æ–≤", "–ì—Ä–∞—Ñ–∏–∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤"],
    ["–ü–æ–ª–µ–∑–Ω—ã–µ –Ω–æ–º–µ—Ä–∞", "–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"],
    ["–ü—Ä–æ—à–∏–≤–∫–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è", "–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã"],
]
for row in buttons:
    menu_keyboard.row(*row)


def load_users():
    if not os.path.exists(USERS_FILE):
        return set()
    with open(USERS_FILE, "r") as f:
        return set(int(line.strip()) for line in f if line.strip().isdigit())


def save_user(user_id: int):
    users = load_users()
    if user_id not in users:
        with open(USERS_FILE, "a") as f:
            f.write(f"{user_id}\n")


def wind_direction(deg):
    dirs = [
        "—Å–µ–≤–µ—Ä–Ω—ã–π", "—Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π", "–≤–æ—Å—Ç–æ—á–Ω—ã–π", "—é–≥–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π",
        "—é–∂–Ω—ã–π", "—é–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π", "–∑–∞–ø–∞–¥–Ω—ã–π", "—Å–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω—ã–π"
    ]
    ix = round(deg / 45) % 8
    return dirs[ix]


def weather_icon(weather_id):
    if 200 <= weather_id < 300:
        return "‚õàÔ∏è"
    elif 300 <= weather_id < 400:
        return "üå¶Ô∏è"
    elif 500 <= weather_id < 600:
        return "üåßÔ∏è"
    elif 600 <= weather_id < 700:
        return "‚ùÑÔ∏è"
    elif 700 <= weather_id < 800:
        return "üå´Ô∏è"
    elif weather_id == 800:
        return "‚òÄÔ∏è"
    elif weather_id == 801:
        return "üå§Ô∏è"
    elif 802 <= weather_id <= 804:
        return "‚òÅÔ∏è"
    else:
        return "üåà"


TARGET_HOURS = [1, 8, 14, 19]


def send_weather_to_all():
    weather = get_weather_full()
    message = f"üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ –º–∏—Ä! –°–µ–≥–æ–¥–Ω—è –Ω–∞—Å –æ–∂–∏–¥–∞–µ—Ç —Ç–∞–∫–∞—è –ø–æ–≥–æ–¥–∞:\n\n{weather}"
    users = load_users()
    for user_id in users:
        try:
            bot.send_message(chat_id=user_id, text=message, parse_mode="HTML")
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {user_id}: {e}")


@bot.message_handler(commands=['start'])
def start(message):
    save_user(message.chat.id)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:", reply_markup=menu_keyboard)


@bot.message_handler(commands=['extract'])
def extract(message):
    rar_path = "firmware.rar"
    extract_dir = "extracted_firmware"

    try:
        if not os.path.exists(rar_path):
            bot.send_message(message.chat.id, "‚ùå –ê—Ä—Ö–∏–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        os.makedirs(extract_dir, exist_ok=True)

        with RarFile(rar_path) as rf:
            rf.extractall(path=extract_dir)

        files = os.listdir(extract_dir)
        msg = "‚úÖ –ê—Ä—Ö–∏–≤ —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω. –§–∞–π–ª—ã:\n" + "\n".join(files)
        bot.send_message(message.chat.id, msg)

    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–µ: {e}")


@bot.message_handler(commands=['restart'])
def restart(message):
    bot.send_message(message.chat.id, "‚ôªÔ∏è –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...")

    # –°–æ–∑–¥–∞–µ–º —Ñ–ª–∞–≥-—Ñ–∞–π–ª –¥–ª—è watcher
    with open("restart.flag", "w") as f:
        f.write("1")

    # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —á–µ—Ä–µ–∑ —Å–∏–≥–Ω–∞–ª SIGINT
    os.kill(os.getpid(), signal.SIGINT)


@bot.message_handler(func=lambda m: True)
def handle_message(message):
    text = message.text

    text_responses = {
        "–ü–æ–ª–µ–∑–Ω—ã–µ –Ω–æ–º–µ—Ä–∞": """‚òéÔ∏è –ê–ö–¢–£–ê–õ–¨–ù–´–ï –ù–û–ú–ï–†–ê –î–ò–°–ü–ï–¢–ß–ï–†–û–í

–í–∞—Å–∏–ª—å–µ–≤–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞:
+79212822470
+79916702832
8(81556)31008

–õ–æ–¥—ã–≥–∏–Ω–∞ –ì–∞–ª–∏–Ω–∞:
+79215162580 (–ª–∏—á–Ω—ã–π)
+79020356086
8(81551)72512

... (–æ—Å—Ç–∞–≤–∏–º –∫–∞–∫ –µ—Å—Ç—å –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏)
"""
    }

    photo_mapping = {
        "–ì—Ä–∞—Ñ–∏–∫ –º–∞—Å—Ç–µ—Ä–æ–≤": "masters.jpg",
        "–ì—Ä–∞—Ñ–∏–∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–≤": "dispatchers.jpg",
        "–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è": "info.jpg"
    }

    if text == "–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã":
        weather = get_weather_full()
        bot.send_message(message.chat.id, weather, parse_mode="HTML")

    elif text in text_responses:
        bot.send_message(message.chat.id, text_responses[text], parse_mode="HTML")

    elif text in photo_mapping:
        filename = photo_mapping[text]
        if os.path.exists(filename):
            with open(filename, 'rb') as photo:
                bot.send_photo(message.chat.id, photo, caption=text)
        else:
            bot.send_message(message.chat.id, "‚ùå –ö–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

    elif text == "–ü—Ä–æ—à–∏–≤–∫–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è":
        rar_file = "D-link 1.0.7.tar"
        try:
            if not os.path.exists(rar_file):
                raise FileNotFoundError

            size_mb = os.path.getsize(rar_file) / (1024 * 1024)
            if size_mb > 50:
                bot.send_message(message.chat.id,
                                 f"‚ö†Ô∏è –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π ({size_mb:.2f} MB). –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä ‚Äî 50MB.")
                return

            with open(rar_file, 'rb') as doc:
                bot.send_document(message.chat.id, doc, caption="–ü—Ä–æ—à–∏–≤–∫–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è")

        except FileNotFoundError:
            bot.send_message(message.chat.id, "‚ùå –§–∞–π–ª –ø—Ä–æ—à–∏–≤–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        except Exception as e:
            bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞—Ä—Ö–∏–≤–∞: {e}")

    else:
        bot.send_message(message.chat.id, "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –º–µ–Ω—é.")



if __name__ == "__main__":
    pid_dir = os.getenv('TEMP', '.')
    pidfile = os.path.join(pid_dir, 'telegram_bot.pid')

    if os.path.exists(pidfile):
        print("Already running.")
        sys.exit()

    with open(pidfile, "w") as f:
        f.write(str(os.getpid()))

    scheduler = BackgroundScheduler(timezone="Europe/Moscow")
    scheduler.add_job(send_weather_to_all, 'cron', hour=7, minute=30)
    scheduler.start()

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    try:
        bot.infinity_polling()
    except KeyboardInterrupt:
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ —Å–∏–≥–Ω–∞–ª—É.")
    finally:
        if os.path.exists(pidfile):
            os.remove(pidfile)